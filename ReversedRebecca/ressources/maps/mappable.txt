Les mappables sont des classes Java programmées pour créer des objets à partir de pastilles de couleurs sur le dessin de carte X_content.png
Le mot remplaçant X devant _content ne peut être choisi que parmi les suivants : downest, downer, down, world, up, upper, upest

Chaque pastille, par sa couleur RGB exacte, créera un objet précis sur la map. Voici la bibliothèque référençant ces pastilles.



The mappables are Java classes programmed to create objects from color chips on a file _content.png
The word before _content can only be one of those : downest, down, world, up, upper, uppest

Each chip, by its exact RGB color, will create a specific object on the map. Here is the chip SEO library. 


////// NIVEAU / LEVEL //////

Null -> 0 (pas toujours autorisé / not always allowed)
Cyan / Cyan -> 1
Verte / Green -> 2
Jaune / Yellow -> 3
Orange / Orange -> 4
Rouge / Red -> 5
Violette / Purple -> 6


////// OUTILS / TOOLS //////

Red = dépend de l'outil / depends on the tool
Green = voir niveau / see level
Blue = 255

Clef / Key -> 1
Bombe / Bomb -> 2
Puce / Chip -> 3
Pelle / Shovel -> 4

exemple : 
Bombe Verte / Green Bomb : 2-2-255
Clef Rouge / Red Key : 1-5-255


////// PUZZLER //////

Red = dépend du puzzler / depends on the puzzler
Green = 255*
Blue = voir niveau / see level

*Si l'objet a un FACING, retirer 0 pour HORIZONTAL, 1 pour GAUCHE, 2 pour DROITE, 3 pour HAUT, 4 pour BAS et 5 pour VERTICAL.
*Si l'objet a une couleur (indépendante du niveau), retirez 10 pour l'en changer (répétable).
*If the object has a FACING, subtract 0 for HORIZONTAL, 1 for LEFT, 2 for RIGHT, 3 for UP et 4 for DOWN and 5 for VERTICAL.
*If the object has a color (independent of the level), subtract 10 to change it (repeatable).

Porte / Door -> 1
Gravas / Rubble -> 2
Ordinateur / Computer -> 3
Trou / Hole -> 4
Trou vers le haut / Hole Upward -> 5

exemple : 
Porte (Bleu et Horizontal) Null / Null (Blue and Horizontal) Door : 1-255-0
Gravas (Bleu et Horizontal) Jaune / Yellow (Blue and Horizontal) Rubble : 2-255-3
Trou Droite Vert / Green Right Hole : 4-253-2

////// COFFRE / CHEST //////

Red = dépend du coffre / depends on the chest
Green = 128
Blue = 255

Coffre Ouvert / Opened Chest -> 0
CHEST-01 -> 1
CHEST-02 -> 2
...
CHEST-09 -> 9

Un fichier doit être présent dans le dossier de map pour définir le contenu du coffre / a file must be in the map folder to etablish the chest's content.

////// VIVANTS / LIVING //////

Red = 255
Green = dépend du vivant / depends on the living
Blue = 0

Joueur / Player -> 0
Ennemi / Foe -> 255

Les PNJ peuvent être customisés grâce à des fichiers csv dans les dossiers de niveau. Voir la documentation Piranha.
NPC can be customized thank to csv files in the level's folder. See the Piranha documentation. 

PNJ-01 / NPC-01 -> 1
PNJ-02 / NPC-02 -> 2
PNJ-03 / NPC-03 -> 3
...
PNJ-29 / NPC-29 -> 29
PNJ-30 / NPC-30 -> 30

exemple : 
Joueur / Player : 255-0-0
PNJ-17 / NPC-17 : 255-17-0


////// INTERACTIFS / INTERACTIVE //////

Red = dépend de l'objet / depends on the object
Green = 255
Blue = 255

Les objets peuvent être customisé exactement de la même façon que les vivants.
The objets can be customized exactly the same way than the living. 

OBJ-01 -> 1
OBJ-02 -> 2
OBJ-03 -> 3
...
OBJ-98 -> 98
OBJ-99 -> 99


////// DECORATION & ANIMATION //////

La plupart des décoration et animations sont créées à partir d'Instructions Piranha bien précises (voir "ressources\piranha doc\types de requêtes\requêtes de création").
Il existe des exceptions : certaines "pastilles" correspondent à des animations. Notamment celles liées aux puzzlers. 
Most of the decorations and animations are created from specific Piranha Instruction (see "ressources\piranha doc\types de requêtes\requêtes de création").
There are some exceptions : some "chips" correspond to some animations. Especially those related to puzzlers.

Red = dépend du puzzler / depends on the puzzler
Green = 128
Blue = dépend de l'animation / depends on the animation

exemple : 
Animation de vérouillage de porte / Animation for locking door : 1-128-2
Animation de creusage de trou / Animation for digging hole : 4-128-1

Note : puisqu'une animation se lance aussitôt placée, il est bien plus intéressant de l'instancier au moment voulu à partir d'une Instruction Piranha plutôt que de les placer comme "pastille" sur un fichier de map.
Note: since an animation starts as soon as it is placed, it is much more interesting to instantiate it at the desired time from a Piranha Instruction rather than placing them as a "chip" on a map file.


////// ROCHERS / ROCKS //////

Red = 128 plus ou moins X (jusqu'à 8) / 128 plus or minus X (up to 8)
Green = 128 plus ou moins Y (jusqu'à 8) / 128 plus or minus Y (up to 8)
Blue = dépend du rocher / depends on the rock

Mur / Wall -> 255
Rocher Pyramidale / Pyramidal Rock -> 254
Petit Rocher / Small Rock -> 253
Rocher Plat / Flat Rock -> 252
Gros Rocher / Big Rock -> 251

exemple :
Rocher Pyramidale décalé de 4 pixels vers la droite et de 3 pixels vers le haut : 132-125-254
Pyramidal Rock shifted 4 pixels to the right and 3 pixels up : 132-125-254

Attention ! Ces pastilles ne PEUVENT PAS être utilisées dans le cadre d'Instructions Piranha. Leurs usages est exclusivement prévu pour les fichiers de map.
Attention ! These chips CANNOT be used in Piranha Instructions. Their use is exclusively intended for map files.


////// AUTRE / OTHER //////

Rien / Nothing : 0-0-0
Mur / Wall : 255-255-255
Mur / Wall : 128-128-255 (peut servir pour le mobilier, pour faire la différence avec les "murs classique" sur la carte / can be used for the furniture, to make the difference with "classical walls" on the map).
Panneau "Disponible Prochainement" / "Coming Soon" Panel : 255-190-255

Les points de passages sont des repères pour les PNJ lorsque leur objectif (là où ils veulent aller) est inatteignable par plus d'un "simple coude".
Leur consommation en ressource croit exponentiellement avec leur nombre, n'en mettre que là où c'est nécessaire.

Path Points are landmarks for NPC when its goal (where it wants to go) is unreachable with more than a "single bend".
Their resource consumption grows exponentially with their number, put them only where it needs to.

Point de passage / Path Point : 48-48-48

